! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! 
! Map File with Human-Readable Information
! 
! Generated by KPP-2.2.4_gc symbolic chemistry Kinetics PreProcessor
!       (http://www.cs.vt.edu/~asandu/Software/KPP)
! KPP is distributed under GPL, the general public licence
!       (http://www.gnu.org/copyleft/gpl.html)
! (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
! (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech
!     With important contributions from:
!        M. Damian, Villanova University, USA
!        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
! 
! File                 : gckpp.map
! Time                 : Tue Jan 23 20:04:37 2018
! Working directory    : /n/home05/msulprizio/GC/Code.v11-02/KPP/Standard
! Equation file        : gckpp.kpp
! Output root filename : gckpp
! 
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



### Options -------------------------------------------

FUNCTION - AGGREGATE
JACOBIAN - SPARSE W/ ACCOUNT FOR LU DECOMPOSITION FILL-IN
DOUBLE   - ON
REORDER  - ON

### Parameters ----------------------------------------

! NSPEC - Number of chemical species
  INTEGER, PARAMETER :: NSPEC = 240 
! NVAR - Number of Variable species
  INTEGER, PARAMETER :: NVAR = 235 
! NVARACT - Number of Active species
  INTEGER, PARAMETER :: NVARACT = 205 
! NFIX - Number of Fixed species
  INTEGER, PARAMETER :: NFIX = 5 
! NREACT - Number of reactions
  INTEGER, PARAMETER :: NREACT = 722 
! NVARST - Starting of variables in conc. vect.
  INTEGER, PARAMETER :: NVARST = 1 
! NFIXST - Starting of fixed in conc. vect.
  INTEGER, PARAMETER :: NFIXST = 236 

### Species -------------------------------------------

Variable species
  1 = CH2I2 (r)  80 = CH2Cl2 (r)159 = MVKN (r)  
  2 = CH2ICl (r) 81 = Cl2O2 (r) 160 = MGLYOO (r)
  3 = CH2IBr (r) 82 = HCFC123 (r)161 = PRN1 (r)  
  4 = MONX (r)   83 = HCFC141b (r)162 = MGLOO (r) 
  5 = AERI (n)   84 = HCFC142b (r)163 = MONITU (r)
  6 = CO2 (n)    85 = IONO (r)  164 = A3O2 (r)  
  7 = INDIOL (n) 86 = HCFC22 (r)165 = CH2OO (r) 
  8 = ISALA (n)  87 = OIO (r)   166 = ISNOOA (r)
  9 = ISALC (n)  88 = RA3P (r)  167 = PROPNN (r)
 10 = ISN1OA (n) 89 = RB3P (r)  168 = MAN2 (r)  
 11 = ISN1OG (r) 90 = ETP (r)   169 = PO2 (r)   
 12 = LBRO2H (n) 91 = XYLE (r)  170 = ISOPNDO2 (r)
 13 = LBRO2N (n) 92 = ClNO2 (r) 171 = B3O2 (r)  
 14 = LISOPOH (n) 93 = DMS (r)   172 = MACROO (r)
 15 = LISOPNO3 (n) 94 = CH3Br (r) 173 = MAOPO2 (r)
 16 = LTRO2H (n) 95 = CH3Cl (r) 174 = MACRN (r) 
 17 = LTRO2N (n) 96 = HNO4 (r)  175 = R4N1 (r)  
 18 = LVOCOA (n) 97 = ClOO (r)  176 = ISOP (r)  
 19 = LVOC (r)   98 = OClO (r)  177 = H2O2 (r)  
 20 = LXRO2H (n) 99 = PAN (r)   178 = ATO2 (r)  
 21 = LXRO2N (n)100 = RP (r)    179 = HCOOH (r) 
 22 = MSA (n)   101 = HNO2 (r)  180 = I (r)     
 23 = PYAC (n)  102 = PP (r)    181 = RCO3 (r)  
 24 = SO4H1 (n) 103 = PRPN (r)  182 = IO (r)    
 25 = SO4H2 (n) 104 = SO4 (r)   183 = OLNN (r)  
 26 = SOAGX (n) 105 = ALK4 (r)  184 = OLND (r)  
 27 = SOAIE (n) 106 = PIP (r)   185 = LIMO2 (r) 
 28 = SOAME (n) 107 = R4P (r)   186 = KO2 (r)   
 29 = IMAE (r)  108 = HPALD (r) 187 = HOBr (r)  
 30 = SOAMG (n) 109 = BrCl (r)  188 = ISOPNBO2 (r)
 31 = POx (n)   110 = N2O5 (r)  189 = HC5OO (r) 
 32 = LOx (n)   111 = C3H8 (r)  190 = PIO2 (r)  
 33 = PCO (n)   112 = DHPCARP (r)191 = HNO3 (r)  
 34 = LCO (n)   113 = Br2 (r)   192 = ISOPND (r)
 35 = PSO4 (n)  114 = IAP (r)   193 = NMAO3 (r) 
 36 = PNO2 (n)  115 = HOI (r)   194 = ACTA (r)  
 37 = LNO2 (n)  116 = HPC52O2 (r)195 = VRO2 (r)  
 38 = I2O4 (r)  117 = VRP (r)   196 = HOCl (r)  
 39 = DHDN (r)  118 = HC187 (r) 197 = ISN1 (r)  
 40 = DHDC (r)  119 = ATOOH (r) 198 = GLYC (r)  
 41 = I2O2 (r)  120 = MOBA (r)  199 = ClNO3 (r) 
 42 = MONITA (r)121 = HONIT (r) 200 = MGLY (r)  
 43 = BENZ (r)  122 = DHMOB (r) 201 = ACET (r)  
 44 = CH3CCl3 (r)123 = RIPB (r)  202 = HC5 (r)   
 45 = H1301 (r) 124 = MP (r)    203 = RIO2 (r)  
 46 = H2402 (r) 125 = ISNP (r)  204 = INO2 (r)  
 47 = I2O3 (r)  126 = BrSALA (r)205 = R4O2 (r)  
 48 = CH3I (r)  127 = BrSALC (r)206 = ETO2 (r)  
 49 = PMNN (r)  128 = MAOP (r)  207 = R4N2 (r)  
 50 = PPN (r)   129 = MRP (r)   208 = HAC (r)   
 51 = TOLU (r)  130 = RIPA (r)  209 = MRO2 (r)  
 52 = BrNO2 (r) 131 = RIPD (r)  210 = BrO (r)   
 53 = CCl4 (r)  132 = EOH (r)   211 = PRPE (r)  
 54 = CFC11 (r) 133 = ETHLN (r) 212 = RCHO (r)  
 55 = CFC12 (r) 134 = INPN (r)  213 = MEK (r)   
 56 = CFC113 (r)135 = MTPA (r)  214 = MACR (r)  
 57 = CFC114 (r)136 = NPMN (r)  215 = CH2O (r)  
 58 = CFC115 (r)137 = C2H6 (r)  216 = ALD2 (r)  
 59 = H1211 (r) 138 = IONO2 (r) 217 = MVK (r)   
 60 = IBr (r)   139 = MOBAOO (r)218 = MCO3 (r)  
 61 = IEPOXD (r)140 = DIBOO (r) 219 = SO2 (r)   
 62 = INO (r)   141 = LIMO (r)  220 = HCl (r)   
 63 = N2O (r)   142 = IPMN (r)  221 = HBr (r)   
 64 = TRO2 (r)  143 = H (r)     222 = Br (r)    
 65 = BRO2 (r)  144 = MACRNO2 (r)223 = NO (r)    
 66 = IEPOXA (r)145 = BrNO3 (r) 224 = HO2 (r)   
 67 = IEPOXB (r)146 = ROH (r)   225 = NO2 (r)   
 68 = IONITA (r)147 = Cl2 (r)   226 = NO3 (r)   
 69 = N (r)     148 = I2 (r)    227 = H2O (r)   
 70 = OCS (r)   149 = MONITS (r)228 = Cl (r)    
 71 = XRO2 (r)  150 = ISOPNB (r)229 = O3 (r)    
 72 = HI (r)    151 = CH4 (r)   230 = O (r)     
 73 = MAP (r)   152 = ISNOHOO (r)231 = O1D (r)   
 74 = CHCl3 (r) 153 = MVKOO (r) 232 = ClO (r)   
 75 = ICl (r)   154 = ISNOOB (r)233 = MO2 (r)   
 76 = IMAO3 (r) 155 = CH3CHOO (r)234 = OH (r)    
 77 = MPN (r)   156 = GAOO (r)  235 = CO (r)    
 78 = CHBr3 (r) 157 = IEPOXOO (r)
 79 = CH2Br2 (r)158 = GLYX (r)  

Fixed species
  1 = H2 (r)      3 = N2 (r)      5 = RCOOH (n) 
  2 = MOH (r)     4 = O2 (r)    

### Subroutines ---------------------------------------

SUBROUTINE Fun ( V, F, RCT, Vdot )
SUBROUTINE Jac_SP ( V, F, RCT, JVS )
SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )
SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )
SUBROUTINE KppSolve ( JVS, X )
SUBROUTINE KppSolveTR ( JVS, X, XX )
SUBROUTINE Initialize ( )
SUBROUTINE Shuffle_user2kpp ( V_USER, V )
SUBROUTINE Shuffle_kpp2user ( V, V_USER )
SUBROUTINE Update_RCONST ( )
SUBROUTINE Update_PHOTO ( )
SUBROUTINE GetMass ( CL, Mass )
SUBROUTINE ComputeFamilies ( V, FAM )
