! $Id: rtfunc.f,v 1.1 2003/06/30 20:26:04 bmy Exp $
	REAL*8 FUNCTION RTFUNC(GMU, ISPEC, IFNC, IBRCH, TT, PRESMB,
     2	                 JLOOP)

      ! References to F90 modules
      USE ERROR_MOD, ONLY : ERROR_STOP

      IMPLICIT NONE

#     include "CMN_SIZE"
#     include "comsol.h"

C**********************************************************************
C                                                                     *
C  HARVARD TROPOSPHERIC CHEMISTRY MODULE FOR 3-D APPLICATIONS         *
C  by Larry Horowitz, Jinyou Liang, Gerry Gardner, Prof. Daniel Jacob *
C  of HARVARD UNIVERSITY    (Release V2.0)                            *
C**********************************************************************
C
C *********************************************************************
C    Computes rate constant defined by function # IFNC of the input
C    list of functions from fort.1 for the reaction IRCT
C    of the reaction list
C *********************************************************************
C
      INTEGER MX,NW1,NW2

	PARAMETER (MX=8, NW1=1, NW2=70)

	REAL*8 GMU,TT,PRESMB
C for cross-section calculations
      REAL*8  QCHAPP

	PARAMETER (QCHAPP=3.40E-4)

	REAL*8 AA(MX),BB(MX),A1(MX),B1(MX),
     C         APARA(MXWL),BPAN(MXWL),BHNO3(MXWL)
	REAL*8 FUNO1D,FUNO1DHAM2,FUNBAS,SCALNO3
C
      INTEGER J,NTEMP,IBRCH,IFNC,ISPEC,JLOOP,ITEMP,I,MAX

      REAL*8 SUM1,SUM2,CHI,TMIN,TMAX,PHI,TH
C
	RTFUNC=0.
	IF (IBRCH.GT.MXBRCH .OR. IBRCH.LT.1) GOTO 3000
	IF (ISPEC.GT.MXSPE  .OR. ISPEC.LT.0) GOTO 2500 
	IF (ISPEC.EQ.0 .AND. (IFNC.LT.24 .OR. IFNC.GT.26)) GOTO 2500
	IF (IFNC.LE.20      .OR. IFNC.GT.45) GOTO 5000
	GOTO(21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
     C	     41,42,43,44,45),(IFNC-20)
C
21	CONTINUE
	GOTO 5000
22	CONTINUE
	GOTO 5000
23	CONTINUE
	GOTO 5000
C  *****
C  ASJMP
C  *****
24     CONTINUE
C    Sets photlysis rate equal to that for MP, used for organic peroxides.
        ISPEC=0
        DO 672 I=1,MXSPE
           IF ('MP      '.EQ.CNAME(I)) ISPEC = I
672     CONTINUE
        IF (ISPEC .EQ. 0) GOTO 2500
        ITEMP = 1
        GOTO 1000
C *******
C ASJMNO3
C *******
25     CONTINUE
C    Sets photolysis rate equal to that for MNO3, used for organic nitrates.
        ISPEC=0
        DO 673 I=1,MXSPE
           IF ('MNO3    '.EQ.CNAME(I)) ISPEC = I
673     CONTINUE
        IF (ISPEC .EQ. 0) GOTO 2500
        ITEMP = 1
        GOTO 1000
C *******
C ASJACET
C *******
26     CONTINUE
C    Sets photolysis rate equal to that for ACET
        ISPEC=0
        DO 674 I=1,MXSPE
           IF ('ACET    '.EQ.CNAME(I)) ISPEC = I
674     CONTINUE
        IF (ISPEC .EQ. 0) GOTO 2500
        ITEMP = 1
        GOTO 1000
27	CONTINUE
	GOTO 5000
28	CONTINUE
	GOTO 5000
29	CONTINUE
	GOTO 5000
C  ****
C  none
C  ****
30	CONTINUE
C    For those species whose cross-section values have no temperature
C    dependence, just use the cross section * PHI read from fort.1
	ITEMP=1
C    Summing of (cross section * flux) for each wavelength is
C    performed at line 1000
	GOTO 1000
31	CONTINUE
	GOTO 5000
32	CONTINUE
	GOTO 5000
33	CONTINUE
	GOTO 5000
C  *****
C  JN2O5
C  *****
34	CONTINUE
C   In the range 285-380nm and 225-300K, replace cross-sections with
C   analytic function from NASA92, p.118
C   If TT outside 225-300K, use appropriate endpoint
        TH= TT
        IF (TT.GT.300.) TH=300.
        IF (TT.LT.225.) TH=225.
        DO 500 I=NW1,NW2
           IF ((WL(I).LE.3800.).AND.(WL(I).GE.2850.).AND.
     C         (IBRCH.EQ.2)) THEN
              XSECT(I,ISPEC,2,IBRCH)=EXP(2.735+((4728.5-1.7127*
     +                                     WL(I))/TH)) *1.0E-20
           ELSE
              XSECT(I,ISPEC,2,IBRCH)= XSECT(I,ISPEC,1,IBRCH)
           ENDIF
500	CONTINUE
	ITEMP=2
	GOTO 1000
C  ****
C  JNO2
C  ****
35	CONTINUE
C    Variation of cross-section with temperature is described by a linear
C    function of temperature in NASA92, p.111.
C
C    The a parameter from NASA92 mapped onto our grid. Since we are
C    adjusting sigma*PHI here, we need to use a*PHI here. These values
C    were generated by interpolating a*PHI values.
        DATA APARA/  
     1       0.000E+00, 0.000E+00, 0.000E+00, 0.000E+00,
     2       0.000E+00, 0.000E+00, 0.000E+00, 0.000E+00,
     3       0.000E+00, 0.000E+00, 0.000E+00, 0.000E+00,
     4       0.000E+00, 0.000E+00, 0.000E+00, 0.000E+00,
     5       0.000E+00, 0.000E+00, 0.000E+00, 0.000E+00,
     6       0.000E+00, 0.000E+00, 0.000E+00, 1.545E-02,
     7       7.811E-02,-7.372E-03,-4.406E-02,-5.397E-02,
     8      -1.979E-01,-3.117E-01,-4.377E-01,-6.076E-01,
     9      -7.312E-01,-9.383E-01,-1.219E+00,-1.304E+00,
     A      -1.429E+00,-1.731E+00,-1.535E+00,-1.549E+00,
     1      -1.486E+00,-1.189E+00,-1.190E+00,-9.351E-01,
     2      -8.172E-01,-8.805E-01,-9.009E-01,-7.906E-01,
     3      -5.557E-01,-3.035E-01,-1.688E-01,-7.335E-02,
     4      -1.084E-02,-1.087E-02, 0.000E+00, 0.000E+00,
     5       0.000E+00, 0.000E+00, 0.000E+00, 0.000E+00,
     6       0.000E+00, 0.000E+00, 0.000E+00, 0.000E+00,
     7       0.000E+00, 0.000E+00, 0.000E+00, 0.000E+00,
     8       0.000E+00, 0.000E+00 /
C
	DO 550 I=NW1,NW2
c	The function involving parameter a only applies above 277.5nm. Below
c	this wavelength, retain the value from the data file.
		IF (WL(I).LT.2775.D0) THEN 
			XSECT(I,ISPEC,2,IBRCH)=XSECT(I,ISPEC,1,IBRCH)
		ELSE
			XSECT(I,ISPEC,2,IBRCH)=XSECT(I,ISPEC,1,IBRCH)+
     *                   APARA(I)*(TT-273.15) *1.0E-22
		ENDIF
550	CONTINUE
	ITEMP=2
	GOTO 1000
C  ***
C  JO3
C  ***
36    CONTINUE
c     Note that the interpolated values in the data file are sigma values
c     only, not the sigma-PHI product values as is the case for other
c     species. (see p107, NASA 92)
C     This routine uses FUNBAS, which calculates temperature dependence
C     of O3 cross-sections in the appropriate wavelength interval, and
C     FUNO1D, which gives the O(1D) quantum yield.
C
C   sum (PHI*x-section*flux) over wavelengths
      DO 600 I=NW1,NW2
         IF (IBRCH.EQ.1) THEN
C           O3->O(1D)
            PHI=FUNO1DHAM2(WL(I),TT)
         ELSE
C           O3->O(3P)
            PHI=1.-FUNO1DHAM2(WL(I),TT)
         ENDIF
         RTFUNC = RTFUNC + PHI*FUNBAS(I,ISPEC,TT)*ACTFLX(I,JLOOP)
600   CONTINUE
C   Finally, if we're doing the O(3P) branch, add in contribution from 
C   the Chappuis band (visible). Scale QCHAPP by transmission at 6000A.
      IF (IBRCH .EQ. 2) RTFUNC = RTFUNC + QCHAPP*ACTFLX(NW2+1,JLOOP)
      RETURN
C  ****
C  JNO3
C  ****
37	CONTINUE
C     Direct assignment of the J values for the two branches of NO3
C     photolysis (see p122, NASA 94)
C     These values are for full sun conditions, they should be scaled for
C     time of day, aerosols, clouds.
        IF (GMU .LT. 0.0) RETURN
C     Scalno3 is a factor introduced to account for scattering/reflection.
C     The JPL recommended values are for surface conditions, with an albedo
C     of ~0.10. Under these conditions, we get TRANS (i.e., ACTFLX(NW2+1,IALT))
C     approximately equal to 1.19. So, we need to apply this scaling factor.
        SCALNO3=1.19D0
	IF (IBRCH.EQ.1) THEN
		RTFUNC=0.016/SCALNO3
	ELSE
		RTFUNC=0.19/SCALNO3
	ENDIF
C       Scale JNO3 based on radiation transmission at 6000 A
        RTFUNC=RTFUNC*ACTFLX(NW2+1,JLOOP)
	RETURN
C  *****
C  JH2O2
C  *****
38	CONTINUE
C    In the range, 260-350nm and 200-400K, the cross-section is
C    given by an analytic expression in NASA92, p.110
C    Outside the range 200-400K, replace TT by appropriate endpoint
         TH= TT
	IF (TT.LT.200.) TH=200.
	IF (TT.GT.400.) TH=400.

    	DATA A1/6.4761E+4, -9.2170972E+2, 4.535649,    -4.4589016E-3,
     C     -4.035101E-5,  1.6878206E-7,-2.652014E-10, 1.5534675E-13/

      DATA B1/6.8123E+3, -5.1351E+1, 1.1522E-1, -3.0493E-5,
     C       -1.0924E-7,  0.,        0.,         0./

C
	CHI=1./(1.+EXP(-1265./TH))
	DO 700 I=NW1,NW2
          SUM1=0.
          SUM2=0.
C    Outside the range 260-350nm, use values from fort.1
          IF (WL(I).LT.2600.D0 .OR. WL(I).GT. 3500.D0) THEN
	        XSECT(I,ISPEC,2,IBRCH)=XSECT(I,ISPEC,1,IBRCH)
          ELSE
	        DO 380 J=1,8
	          SUM1=SUM1+A1(J)*(WL(I)/10.d0)**(J-1)
	          SUM2=SUM2+B1(J)*(WL(I)/10.d0)**(J-1)
380	        CONTINUE
	        XSECT(I,ISPEC,2,IBRCH)=(CHI*SUM1+(1.-CHI)*SUM2)*1.0E-21
          ENDIF
700	CONTINUE
	ITEMP=2
	GOTO 1000
C  ********
C  T-interp
C  ********
39    CONTINUE
C   If cross-section data is given in fort.1 at several temperatures,
C   use linear interpolation to get temperature-dependent cross-section
	NTEMP=0
	TMAX=-1.
	TMIN=10000.
	DO 650 I=1,MAXTEMP
	 IF (TARRAY(ISPEC,IBRCH,I).LT.1.E-20) GOTO 650
		IF (TMAX.LT.TARRAY(ISPEC,IBRCH,I)) 
     *                 TMAX=TARRAY(ISPEC,IBRCH,I)
		IF (TMIN.GT.TARRAY(ISPEC,IBRCH,I)) 
     *                 TMIN=TARRAY(ISPEC,IBRCH,I)
		NTEMP=NTEMP+1
650	CONTINUE
        TH= TT
	IF (TT.LT.TMIN) TH=TMIN
	IF (TT.GT.TMAX) TH=TMAX
	ITEMP=NTEMP+1
	IF (ITEMP.GT.MAXTEMP) CALL ERROR_STOP( 'STOP 651', 'rtfunc.f' )
	DO 680 I=1,NTEMP-1
        IF ((TH.GE.TARRAY(ISPEC,IBRCH,I))
     C        .AND.(TH.LE.TARRAY(ISPEC,IBRCH,I+1))) THEN
	  DO 800 J=NW1,NW2
      	    XSECT(J,ISPEC,ITEMP,IBRCH)=(XSECT(J,ISPEC,I,IBRCH)*
     2         (TARRAY(ISPEC,IBRCH,I+1)-TH)+
     3	    XSECT(J,ISPEC,I+1,IBRCH)*(TH-TARRAY(ISPEC,IBRCH,I)))	
     4	     /(TARRAY(ISPEC,IBRCH,I+1)-TARRAY(ISPEC,IBRCH,I))
800	  CONTINUE
          GOTO 681
        ENDIF
680 	CONTINUE
681 	CONTINUE
	GOTO 1000
C  *****
C  JCH2O
C  *****
40     CONTINUE
C       The second branch (H2+CO) of CH2O photolysis is pressure-dependent
C       between 329 and 364 nm (NASA 87). This routine does temperature
C       interpolation and then (for branch 2) multiplies by a scaling 
C       factor for pressure in the appropriate wavelength range.
	NTEMP=0
	TMAX=-1.
	TMIN=10000.
	DO 651 I=1,MAXTEMP
	 IF (TARRAY(ISPEC,IBRCH,I).LT.1.E-20) GOTO 651
		IF (TMAX.LT.TARRAY(ISPEC,IBRCH,I)) 
     *                 TMAX=TARRAY(ISPEC,IBRCH,I)
		IF (TMIN.GT.TARRAY(ISPEC,IBRCH,I)) 
     *                 TMIN=TARRAY(ISPEC,IBRCH,I)
		NTEMP=NTEMP+1
651	CONTINUE
        TH= TT
	IF (TT.LT.TMIN) TH=TMIN
	IF (TT.GT.TMAX) TH=TMAX
	ITEMP=NTEMP+1
	IF (ITEMP.GT.MAXTEMP) CALL ERROR_STOP( 'STOP 653', 'rtfunc.f' )
	DO 670 I=1,NTEMP-1
	 IF ((TH.GE.TARRAY(ISPEC,IBRCH,I))
     *        .AND.(TH.LE.TARRAY(ISPEC,IBRCH,I+1))) THEN
	 DO 810 J=NW1,NW2
      	  XSECT(J,ISPEC,ITEMP,IBRCH)=(XSECT(J,ISPEC,I,IBRCH)*
     2         (TARRAY(ISPEC,IBRCH,I+1)-TH)+
     3	    XSECT(J,ISPEC,I+1,IBRCH)*(TH-TARRAY(ISPEC,IBRCH,I)))	
     4	     /(TARRAY(ISPEC,IBRCH,I+1)-TARRAY(ISPEC,IBRCH,I))
C     If this is branch 2, and we're in the right wavelength range
C     multiply by a scaling factor for pressure (from NASA 87).
          IF (IBRCH.EQ.2 .AND. WL(J).GT.3290. .AND. WL(J).LT.3640.)
     C      XSECT(J,ISPEC,ITEMP,IBRCH)=XSECT(J,ISPEC,ITEMP,IBRCH)*
     C      (1. +                (WL(J)-3290.)/(3640.-WL(J)))/
     C      (1. + (PRESMB/1013.)*(WL(J)-3290.)/(3640.-WL(J)))
810	 CONTINUE
         GOTO 671
         ENDIF
670 	CONTINUE
671 	CONTINUE
	GOTO 1000
C  ****
C  JPAN
C  ****
41     CONTINUE
C   Correct cross-sections for temperature (Burkholder, pc 93)
       DATA BPAN/
     1      .0,      .0,      .0,      .0,
     1      .0,      .0,      .0, 2.02E-3,
     2 1.36E-3,  .80E-3,  .75E-3, 1.05E-3,
     2 1.47E-3, 1.90E-3, 2.30E-3, 2.71E-3,
     3 3.11E-3, 3.45E-3, 3.76E-3, 4.05E-3,
     3 4.20E-3, 4.55E-3, 4.95E-3, 5.40E-3,
     4 5.95E-3, 6.50E-3, 7.10E-3, 7.70E-3,
     4 8.22E-3, 8.65E-3, 8.98E-3, 9.34E-3,
     5 9.70E-3, 1.02E-2, 1.07E-2, 1.13E-2,
     5 1.18E-2, 1.24E-2, 1.25E-2,      .0,
     6      .0,      .0,      .0,      .0,
     6      .0,      .0,      .0,      .0,
     7      .0,      .0,      .0,      .0,
     7      .0,      .0,      .0,      .0,
     8      .0,      .0,      .0,      .0,
     8      .0,      .0,      .0,      .0,
     9      .0,      .0,      .0,      .0,
     9      .0,      .0/
       DO J=NW1,NW2
          XSECT(J,ISPEC,2,IBRCH) = XSECT(J,ISPEC,1,IBRCH) *
     1                             EXP(BPAN(J)*(TT-298.))
       ENDDO
       ITEMP = 2
       GOTO 1000
42	CONTINUE
	GOTO 5000
C  *****
C  JHNO3
C  *****
43     CONTINUE
C   Correct cross-sections for temperature (Burkholder 94)
       DATA BHNO3/
     1      0.0,      0.0,      0.0,      0.0,      
     1      0.0,      0.0,      0.0,      1.70E-3,
     2      1.66E-3,  1.76E-3,  1.97E-3,  2.17E-3,  
     2      2.15E-3,  1.90E-3,  1.80E-3,  1.94E-3,
     3      1.97E-3,  1.68E-3,  1.34E-3,  1.16E-3,  
     3      1.13E-3,  1.15E-3,  1.24E-3,  1.51E-3,
     4      1.68E-3,  1.89E-3,  2.12E-3,  2.42E-3,  
     4      2.86E-3,  3.31E-3,  3.88E-3,  4.81E-3,
     5      5.62E-3,  6.82E-3,  8.01E-3,  9.85E-3,  
     5      1.07E-2,  1.12E-2,  1.20E-2,  0.0,
     6      0.0,      0.0,      0.0,      0.0,      
     6      0.0,      0.0,      0.0,      0.0,
     7      0.0,      0.0,      0.0,      0.0,      
     7      0.0,      0.0,      0.0,      0.0,
     8      0.0,      0.0,      0.0,      0.0,      
     8      0.0,      0.0,      0.0,      0.0,
     9      0.0,      0.0,      0.0,      0.0,      
     9      0.0,      0.0 /
       DO J=NW1,NW2
          XSECT(J,ISPEC,2,IBRCH) = XSECT(J,ISPEC,1,IBRCH) *
     1                             EXP(BHNO3(J)*(TT-298.))
       ENDDO
       ITEMP = 2
       GOTO 1000
44	CONTINUE
	GOTO 5000
45	CONTINUE
	GOTO 5000
C **********************************
C * end of rate constant functions *
C **********************************
C
1000    CONTINUE	
C   For photolysis functions, come here to sum (flux*xsect*PHI) over
C   wavelengths. (PHI is already included in XSECT)
        DO 1100 I=NW1,NW2
	RTFUNC=RTFUNC+ACTFLX(I,JLOOP)*XSECT(I,ISPEC,ITEMP,IBRCH)
1100	CONTINUE
	RETURN 
C **********
C * ERRORS *
C **********
2500    CONTINUE
C    Tried to photolyze a species without specifying cross-section
           WRITE(*,9002) ISPEC
9002       FORMAT ('Tried to photolyze species ISPEC=',i4,' without',
     C           ' cross-section, check 8coldat.cat & chem.dat')
	   CALL ERROR_STOP( 'STOP 9002', 'rtfunc.f' )
C
3000     CONTINUE
            WRITE(*,9003) IBRCH,ISPEC
9003        FORMAT ('Invalid branch number (',I4,
     C              ') in photolysis of species ISPEC=',I4,
     C              ', check chem.dat')
	    CALL ERROR_STOP( 'STOP 9003', 'rtfunc.f' )
5000	CONTINUE
	    WRITE(*,9005) IFNC
9005	    FORMAT ('Invalid value for IFNC=',I4,', check chem.dat')
	    CALL ERROR_STOP( 'STOP 9005', 'rtfunc.f' )
C
         END
